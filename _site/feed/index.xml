<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>closure</title>
 <link href="http://closure.github.com/feed/" rel="self"/>
 <link href="http://closure.github.com/"/>
 <updated>2011-06-26T18:57:29-07:00</updated>
 <id>http://closure.github.com/</id>
 <author>
   <name>closure</name>
   <email>thomasjstein@gmail.com</email>
 </author>

 
 <entry>
   <title>Hive is MVC for Node.js</title>
   <link href="http://closure.github.com/2011/06/hive"/>
   <updated>2011-06-25T00:00:00-07:00</updated>
   <id>http://closure.github.com/2011/06/hive</id>
   <content type="html">&lt;p&gt;by &lt;a href=&quot;http://github.com/ritch&quot;&gt;@ritch&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Hive?&lt;/h2&gt;

&lt;p&gt;Hive is a framework based on the idea that custom web applications are better for users than pre-canned ones. Using hive allows your team to build custom apps faster than one-size-fits-all solutions. It takes less than 2 minutes to setup (including installing node).&lt;/p&gt;

&lt;h2&gt;Tour &lt;span style=&quot;color: #ccc&quot;&gt;(10 mins)&lt;/span&gt;&lt;/h2&gt;

&lt;iframe width=&quot;650&quot; height=&quot;407&quot; src=&quot;http://www.youtube.com/embed/4YrsIzLZbbs&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;


&lt;h2&gt;Install &lt;span style=&quot;color: #ccc&quot;&gt;(2 mins)&lt;/span&gt;&lt;/h2&gt;

&lt;iframe width=&quot;650&quot; height=&quot;407&quot; src=&quot;http://www.youtube.com/embed/hCObgObVkHw&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;


&lt;h2&gt;Dependency&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://nodejs.org&quot;&gt;node.js&lt;/a&gt; 0.4.8 or higher&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://npm.org&quot;&gt;npm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;In order to run hive projects you will need &lt;a href=&quot;http://nodejs.org&quot;&gt;node.js&lt;/a&gt;. Until version 1.0 of node, I recommend installing &lt;a href=&quot;http://nodejs.org&quot;&gt;node.js&lt;/a&gt; from source. You can get the install guide &lt;a href=&quot;https://github.com/joyent/node/wiki/Installation&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Installing &lt;code&gt;npm&lt;/code&gt; is simple. If you don't have &lt;code&gt;npm&lt;/code&gt; you can get it &lt;a href=&quot;http://npmjs.org/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;On &lt;strong&gt;OSX&lt;/strong&gt; you can get the installer &lt;a href=&quot;https://sites.google.com/site/nodejsmacosx/&quot;&gt;here&lt;/a&gt;, which includes node and npm.&lt;/p&gt;

&lt;h2&gt;MongoDB&lt;/h2&gt;

&lt;p&gt;If you want to use hive's native database syncing capabilities you'll need a MongoDB server, either locally or hosted by a service. If you are trying to hack out something quickly, I suggest signing up for a &lt;a href=&quot;https://mongohq.com/signup&quot;&gt;MongoHQ&lt;/a&gt; account, its free and lets you get started rather quickly.&lt;/p&gt;

&lt;h2&gt;Install&lt;/h2&gt;

&lt;p&gt; Once you have that installed, in &lt;code&gt;~/&lt;/code&gt; you can run:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;npm install hive
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will install the library and CLI.&lt;/p&gt;

&lt;h2&gt;Hello World&lt;/h2&gt;

&lt;p&gt;To quickly create a new project, you can use the hive CLI. To create a project called Hello World in your current directory, run the following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hive new hello-world
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will create a folder in your current directory containing your project. To run your project change directories into the created folder and run hive.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd hello-world
hive
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now you should see hive loading all of your project files and a url where you can preview the project.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Hello World</title>
   <link href="http://closure.github.com/2011/06/hello-world"/>
   <updated>2011-06-24T00:00:00-07:00</updated>
   <id>http://closure.github.com/2011/06/hello-world</id>
   <content type="html">&lt;p&gt;Closure is a group of developers intoxicated by the simplicity of JavaScript.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Paths</title>
   <link href="http://closure.github.com/2011/06/paths"/>
   <updated>2011-06-23T00:00:00-07:00</updated>
   <id>http://closure.github.com/2011/06/paths</id>
   <content type="html">&lt;p&gt;by &lt;a href=&quot;http://github.com/ritch&quot;&gt;@ritch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On my various environments I can never remember how to add a directory to my path. Yes, admittedly it is not that hard to add a directory to your path in OSX. However there is a bit of work here that can be automated to make adding paths simpler and easier.&lt;/p&gt;

&lt;p&gt;Thats where paths comes in; it’s a simple script written in nodejs that exposes the path to nodejs and as a simple CLI.&lt;/p&gt;

&lt;p&gt;Install via npm&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;npm install paths -g
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Want to see your $PATH in a more human readable format? Run the following in terminal&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;paths
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will return something like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;PATHS
/foo
/opt/local/bin
/opt/local/sbin
/usr/bin
/bin
/usr/sbin
/sbin
/usr/local/bin
/usr/X11/bin
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you want to add a path to your ~/.profile&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;paths add /foo
&lt;/code&gt;&lt;/pre&gt;
</content>
 </entry>
 
 <entry>
   <title>Contribute to Closure Blog</title>
   <link href="http://closure.github.com/2011/06/contributing"/>
   <updated>2011-06-23T00:00:00-07:00</updated>
   <id>http://closure.github.com/2011/06/contributing</id>
   <content type="html">&lt;p&gt;by &lt;a href=&quot;http://github.com/ritch&quot;&gt;@ritch&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Why Open Source a Blog?&lt;/h2&gt;

&lt;p&gt;This blog is open for the same reason our projects are open. We want to help the community so why not help the community help the community too? Meta? Meta.&lt;/p&gt;

&lt;h2&gt;Fork&lt;/h2&gt;

&lt;p&gt;If you want to contribute a post you're going to need to fork the &lt;a href=&quot;https://github.com/closure/closure.github.com&quot;&gt;closure.github.com&lt;/a&gt; repo.&lt;/p&gt;

&lt;p&gt;After you have it locally, explore the contents to see how the blog is setup. The easiest way to write a new post is to copy an existing one, but to make it easier, I've created a TextMate bundle.&lt;/p&gt;

&lt;p&gt;With the bundle installed, create a new .markdown file, using the proper naming convention, and type 'post' and hit tab.&lt;/p&gt;

&lt;p&gt;That will give you this template:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
layout: post
title: The Post Title
author: @ritch
excerpt:  A short descriptive sentence.
comments: false
---
by &amp;lt;a href=&quot;http://github.com/ritch&quot;&amp;gt;@ritch&amp;lt;/a&amp;gt;

##Background
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hit tab to navigate through the different required fields and start you post below. If you're not familiar with markdown, check it out &lt;a href=&quot;http://www.simpleeditions.com/59001/markdown-an-introduction&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Preview&lt;/h2&gt;

&lt;p&gt;When you're all done writing your post in markdown, you can preview it by running jekyll on the project.&lt;/p&gt;

&lt;p&gt;Installing jekyll is simple:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo gem install jekyll
sudo easy_install Pygments
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once you have jekyll, you can preview the site by running:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;jekyll --auto --server
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will start a jekyll server at &lt;a href=&quot;http://localhost:4000&quot;&gt;http://localhost:4000&lt;/a&gt;. You can change files and it will automatically regenerate the static site.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Symbox</title>
   <link href="http://closure.github.com/2011/06/symbox"/>
   <updated>2011-06-22T00:00:00-07:00</updated>
   <id>http://closure.github.com/2011/06/symbox</id>
   <content type="html">&lt;p&gt;by &lt;a href=&quot;http://github.com/ritch&quot;&gt;@ritch&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Background&lt;/h2&gt;

&lt;p&gt;I’ve always had trouble keeping various files synced on my three computers. This makes setting up projects that I am working on a chore. That’s where Dropbox comes in. After figuring out that I can just symlink my projects to Dropbox, I rarely have to setup anything. It still felt a bit redundant though, so I built a utility that automates the setup of all the links between folders on Dropbox and my various computers.&lt;/p&gt;

&lt;h2&gt;Usage&lt;/h2&gt;

&lt;p&gt;Symbox is a script that lets you symlink folders without thinking about it. It requires nodejs, which you can get here. If you have npm you can simply run&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;npm install symbox -g
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Otherwise you can install npm in one line and then run the above command.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl http://npmjs.org/install.sh | sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then you want to locate your symbox config by running.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;symbox --config
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will return the location of the config for easy editing.&lt;/p&gt;

&lt;p&gt;The default config should resemble the following.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
    &quot;root&quot;: &quot;~/Dropbox&quot;,
    &quot;sync&quot;: {
        // provide a key of the relative folder path to the dropbox root
        // and a value of the folder on the current computer
        // &quot;foo&quot;: &quot;~/Desktop/foo&quot;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Under the ‘sync’ object you’ll want to add any folders that you want to move into Dropbox and symlink back into place. A simple example of this for me is my nginx server configuration. In order to sync my nginx configuration on all my computers I setup my Symbox config like so.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
    &quot;root&quot;: &quot;~/Dropbox&quot;,
    &quot;sync&quot;: {
        &quot;nginx&quot;: &quot;/usr/local/etc/nginx&quot;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After I have modified my Symbox config, I can update my folders by running the following in terminal.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;symbox
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Symbox will then move the nginx folder to my “root” Dropbox folder and add the symlink for me. All I have to do now is copy my configuration file to my other computers and run through the previous steps then voila my nginx config is the same on all my computers!&lt;/p&gt;
</content>
 </entry>
 
 
</feed>
